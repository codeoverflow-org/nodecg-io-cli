name: CI

on: [push, pull_request]
jobs:
  unit_test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-2019]
        node: [12, 14, 16, 18]

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with: 
        node-version: ${{ matrix.node }}

    - name: Install nodejs dependencies
      run: npm ci

    - name: Build TS
      run: npm run build

    - name: Run tests
      run: npm run test

  integration_test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-2019]
        version: ['0.1', '0.2', 'development']
        node: [14, 18]

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with: 
        node-version: ${{ matrix.node }}

    - name: Install system dependencies
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt update && sudo apt-get -y install libusb-1.0-0-dev libasound2-dev libudev-dev

    - name: Upgrade npm
      run: npm i -g npm@8.3.1

    - name: Install node native development files
      shell: bash
      run: npx node-gyp install

    - name: Install nodejs dependencies
      run: npm ci

    - name: Build
      run: npm run build && npm link

    - name: Run integration test
      shell: bash
      run: ./integration_test.sh ${{ matrix.version }}

  release:
    name: Release
    runs-on: ubuntu-latest
    # not run for dependabot because it shouldn't trigger releases and has no write tokens
    # not run in forks because they are missing secrets too
    # only run for the main branch
    if: github.actor != 'dependabot[bot]' && startsWith(github.repository, 'codeoverflow-org') && github.ref == 'refs/heads/main'
    needs:
    - unit_test
    - integration_test
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release
